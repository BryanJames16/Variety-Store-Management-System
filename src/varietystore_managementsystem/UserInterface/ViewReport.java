/*
 * Copyright (C) 2016 Ilaga_Family
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package varietystore_managementsystem.UserInterface;

import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.awt.*;
import static java.awt.GraphicsDevice.WindowTranslucency.TRANSLUCENT;
import java.util.Calendar;
import javax.swing.*;
import static varietystore_managementsystem.UserInterface.EditUser.connection;

/**
 *
 * @author Ilaga_Family
 */
public class ViewReport extends javax.swing.JFrame {
    
    
    private DefaultTableModel model;
    
    static Connection connection        =   null;
    static int UID                      =   0;
    
    private int pointX                  =   0;
    private int pointY                  =   0;
    
    /**
     * Creates new form ViewReport
     */
    public ViewReport(Connection connection, int userID) {
        
        this.connection = connection;
        this.UID = userID;
        
        initComponents();
        userInit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        btnClose = new javax.swing.JButton();
        btnMin = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(551, 469));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(551, 469));
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        tblData.setFont(new java.awt.Font("Berlin Sans FB", 0, 11)); // NOI18N
        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Transaction Date", "Item Name", "Quantity", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPane.setViewportView(tblData);

        getContentPane().add(scrollPane);
        scrollPane.setBounds(70, 130, 400, 260);

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/varietystore_managementsystem/ELEMENTS/INVENTORY_ELEMENTS/CloseButton.png"))); // NOI18N
        btnClose.setBorderPainted(false);
        btnClose.setContentAreaFilled(false);
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose);
        btnClose.setBounds(520, 20, 20, 20);

        btnMin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/varietystore_managementsystem/ELEMENTS/INVENTORY_ELEMENTS/MinimizeButton.png"))); // NOI18N
        btnMin.setBorderPainted(false);
        btnMin.setContentAreaFilled(false);
        btnMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinActionPerformed(evt);
            }
        });
        getContentPane().add(btnMin);
        btnMin.setBounds(490, 20, 20, 20);

        btnBack.setFont(new java.awt.Font("Berlin Sans FB", 0, 11)); // NOI18N
        btnBack.setText("Back");
        btnBack.setBorderPainted(false);
        btnBack.setContentAreaFilled(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack);
        btnBack.setBounds(210, 410, 90, 21);

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/varietystore_managementsystem/ELEMENTS/INVENTORY_ELEMENTS/ReportsBG.png"))); // NOI18N
        lblBackground.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                lblBackgroundMouseDragged(evt);
            }
        });
        lblBackground.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblBackgroundMousePressed(evt);
            }
        });
        getContentPane().add(lblBackground);
        lblBackground.setBounds(0, 0, 550, 460);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        dispose();
        CashRegister cr = new CashRegister (connection, UID);
        cr.launchFrame ();
    }//GEN-LAST:event_btnBackActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        dispose();
        CashRegister cr = new CashRegister (connection, UID);
        cr.launchFrame();
    }//GEN-LAST:event_formWindowClosing

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        setOpacity (1.0f);
    }//GEN-LAST:event_formWindowGainedFocus

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
        // TODO add your handling code here:
        setOpacity (0.7f);
    }//GEN-LAST:event_formWindowLostFocus

    private void lblBackgroundMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackgroundMousePressed
        // TODO add your handling code here:
        pointX = evt.getX();
        pointY = evt.getY();
    }//GEN-LAST:event_lblBackgroundMousePressed

    private void lblBackgroundMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackgroundMouseDragged
        // TODO add your handling code here:
        setLocation (getLocation().x + evt.getX() - pointX, getLocation().y + evt.getY() - pointY);
    }//GEN-LAST:event_lblBackgroundMouseDragged

    private void btnMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinActionPerformed
        // TODO add your handling code here:
        setState(Frame.ICONIFIED);
    }//GEN-LAST:event_btnMinActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        dispose();
        CashRegister cr = new CashRegister(connection, UID);
        cr.launchFrame();
    }//GEN-LAST:event_btnCloseActionPerformed
    
    private void userInit() {
        model = (DefaultTableModel) tblData.getModel();
        int noOfEntries = 0;
        
        Calendar cal = Calendar.getInstance();
        
        try {
            String sql = "SELECT t.Date, h.ItemName, t.Quantity, t.Price_Total "
                    + "FROM logs_tbl l, history_tbl h, transaction_tbl t, product_tbl p "
                    + "WHERE h.ItemName = p.ProductName AND "
                    + "t.Date = STR_TO_DATE('" + cal.get(Calendar.DATE) + "-" + (cal.get(Calendar.MONTH) + 1) + "-" + cal.get(Calendar.YEAR) + "', "
                    + "'%d-%m-%Y'); ";
            Statement stmt = connection.createStatement();
            ResultSet rs = stmt.executeQuery (sql);
            
            while (rs.next()) {
                noOfEntries++;
                Object [] collection = {rs.getDate ("Date"), rs.getString ("ItemName"), rs.getInt ("ItemQuantity"), rs.getDouble ("Price_Total")};
                model.addRow (collection);
            }
            
            if (noOfEntries == 0) {
                JOptionPane.showMessageDialog (null, "No Entries Yet!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            
        } catch (SQLException sqle) {
            System.err.println ("Error in database: \n" + sqle);
        }
        
        setLocationRelativeTo (null);
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice gd = ge.getDefaultScreenDevice();
        
        if (!gd.isWindowTranslucencySupported(TRANSLUCENT)) {
            System.err.println ("Translucensy not supported.");
        }
        
    }
    
    public void launchFrame() {
        /* Create and display the form */
        setOpacity (1.0f);
        java.awt.EventQueue.invokeLater(() -> {
            new ViewReport(connection, UID).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnMin;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTable tblData;
    // End of variables declaration//GEN-END:variables
}
