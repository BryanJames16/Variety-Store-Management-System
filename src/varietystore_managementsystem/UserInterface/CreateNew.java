/*
 * Copyright (C) 2016 Bryan_James
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package varietystore_managementsystem.UserInterface;

import static java.awt.GraphicsDevice.WindowTranslucency.*;
import javax.swing.*;
import java.awt.*;
import java.sql.*;

/**
 *
 * @author Ilaga_Family
 */
public class CreateNew extends JFrame {
    
    final private String tableName      =   "user_tbl";
    
    protected Connection connection = null;
    protected int UID = 0;
    
    protected String tableNameField     =   "product_tbl";
    protected String productIDField     =   "ProductID";
    protected String productNameField   =   "ProductName";
    protected String productPriceField  =   "Price";
    protected String productTypeField   =   "TypeCode";
    
    private int pointX              =   0;
    private int pointY              =   0;
    
    /**
     * Creates new form CreateNew
     * @param connection
     * @param UID
     */
    public 
        CreateNew(Connection connection, int UID) 
    {
        setUndecorated (true);
        this.connection = connection;
        this.UID = UID;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlInfo = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        lblStock = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        lblType = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        tfStock = new javax.swing.JTextField();
        tfPrice = new javax.swing.JTextField();
        cboType = new javax.swing.JComboBox();
        btnAdd = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        btnMin = new javax.swing.JButton();
        lblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("New Inventory Item");
        setMinimumSize(new java.awt.Dimension(430, 349));
        setPreferredSize(new java.awt.Dimension(430, 349));
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });
        getContentPane().setLayout(null);

        pnlInfo.setBackground(new java.awt.Color (0, 0, 0, 0));
        pnlInfo.setOpaque(false);

        lblName.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        lblName.setText("Item Name:");

        lblStock.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        lblStock.setText("Item Stock:");

        lblPrice.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        lblPrice.setText("Item Price:");

        lblType.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        lblType.setText("Item Type:");

        tfName.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(102, 102, 102), new java.awt.Color(0, 0, 0)));

        tfStock.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(102, 102, 102), new java.awt.Color(0, 0, 0)));

        tfPrice.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(102, 102, 102), new java.awt.Color(0, 0, 0)));

        cboType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---", "Beverages", "Canned / Jarred Goods", "Cleaners", "Condiments", "Dairy", "Medicine", "Paper Goods", "Packed Goods", "Personal Care", "Others" }));
        cboType.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(102, 102, 102), new java.awt.Color(0, 0, 0)));
        cboType.setOpaque(false);

        javax.swing.GroupLayout pnlInfoLayout = new javax.swing.GroupLayout(pnlInfo);
        pnlInfo.setLayout(pnlInfoLayout);
        pnlInfoLayout.setHorizontalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInfoLayout.createSequentialGroup()
                        .addComponent(lblStock)
                        .addGap(18, 18, 18)
                        .addComponent(tfStock, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(pnlInfoLayout.createSequentialGroup()
                            .addComponent(lblName)
                            .addGap(18, 18, 18)
                            .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnlInfoLayout.createSequentialGroup()
                            .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblPrice)
                                .addComponent(lblType))
                            .addGap(21, 21, 21)
                            .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tfPrice)
                                .addComponent(cboType, 0, 277, Short.MAX_VALUE)))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        pnlInfoLayout.setVerticalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblName)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInfoLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblStock))
                    .addComponent(tfStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInfoLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblPrice))
                    .addComponent(tfPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInfoLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblType))
                    .addComponent(cboType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        getContentPane().add(pnlInfo);
        pnlInfo.setBounds(20, 100, 390, 160);

        btnAdd.setBackground(new java.awt.Color (0, 0, 0, 0));
        btnAdd.setFont(new java.awt.Font("Berlin Sans FB", 0, 11)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.setBorderPainted(false);
        btnAdd.setContentAreaFilled(false);
        btnAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd);
        btnAdd.setBounds(340, 290, 51, 21);

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/varietystore_managementsystem/ELEMENTS/INVENTORY_ELEMENTS/CloseButton.png"))); // NOI18N
        btnClose.setBorderPainted(false);
        btnClose.setContentAreaFilled(false);
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose);
        btnClose.setBounds(400, 10, 20, 20);

        btnMin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/varietystore_managementsystem/ELEMENTS/INVENTORY_ELEMENTS/MinimizeButton.png"))); // NOI18N
        btnMin.setBorderPainted(false);
        btnMin.setContentAreaFilled(false);
        btnMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinActionPerformed(evt);
            }
        });
        getContentPane().add(btnMin);
        btnMin.setBounds(370, 10, 20, 20);

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/varietystore_managementsystem/ELEMENTS/INVENTORY_ELEMENTS/CreateNewBG.png"))); // NOI18N
        lblBackground.setMinimumSize(new java.awt.Dimension(430, 349));
        lblBackground.setPreferredSize(new java.awt.Dimension(430, 349));
        lblBackground.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                lblBackgroundMouseDragged(evt);
            }
        });
        lblBackground.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblBackgroundMousePressed(evt);
            }
        });
        getContentPane().add(lblBackground);
        lblBackground.setBounds(0, 0, 430, 350);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        String itemName = null;
        int itemStock = 0;
        double itemPrice = 0.00;
        int itemType = 0;
        boolean isCorrect = true;
        int resultCount = 0;
        
        try {
            itemName = tfName.getText().trim();
            itemStock = Integer.parseInt (tfStock.getText().trim());
            itemPrice = Double.parseDouble (tfPrice.getText().trim());
            itemType = cboType.getSelectedIndex();
            
            if (itemType == -1) {
                JOptionPane.showMessageDialog (null, "Invalid type chosen!", "ERROR", JOptionPane.ERROR_MESSAGE);
                isCorrect = false;
            }
            if (itemStock <= 0 || itemPrice <= 0) {
                JOptionPane.showMessageDialog (null, "Please enter a valid stock and price!", "ERROR", JOptionPane.ERROR_MESSAGE);
                isCorrect = false;
            }
            if (itemName.equals("")) {
                System.err.println ("No Input Data!\n");
                isCorrect = false;
            }
            
        } catch (NumberFormatException nfe) {
            System.err.println ("Invalid data!\n" + nfe);
            JOptionPane.showMessageDialog (null, "Invalid data entered!", "ERROR", JOptionPane.ERROR_MESSAGE);
            isCorrect = false;
        } catch (NullPointerException npe) {
            System.err.println ("No Input Data!\n" + npe);
            JOptionPane.showMessageDialog (null, "Please input a valid data!", "ERROR", JOptionPane.ERROR_MESSAGE);
            isCorrect = false;
        }
        
        if (isCorrect) {
            int choose = 0;
            choose = JOptionPane.showConfirmDialog (null, "Are you sure you want to add this item to the inventory?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (choose == JOptionPane.YES_OPTION) {
                
                try {
                    String sql = "SELECT " + productNameField + " FROM " + tableNameField + " WHERE " + productNameField + " LIKE '%" + itemName + "%';";
                    Statement stmt = connection.createStatement();
                    ResultSet rs = stmt.executeQuery (sql);
                    while (rs.next()) {
                        resultCount++;
                    }
                    
                    if (resultCount > 0) {
                        JOptionPane.showMessageDialog (null, "Product already exists!", "ERROR", JOptionPane.ERROR_MESSAGE);
                    } else {
                        sql = "INSERT INTO " + tableNameField + " (" + productNameField + ", " + productPriceField + ", " + productTypeField + ", " + productTypeField + ")"
                                + "VALUES (" + itemName + ", " + itemPrice + ", " + itemStock + ", " + (itemType - 1) + ")";
                        boolean isSent = stmt.execute (sql);
                        
                        if (!isSent) {
                            JOptionPane.showMessageDialog (null, "Item has been added to the inventory!", "Success", JOptionPane.INFORMATION_MESSAGE);
                            dispose();
                            Inventory inv = new Inventory (connection, UID);
                            inv.launchFrame ();
                        }
                    }
                    
                } catch (SQLException sqle) {
                    System.err.println ("Problem in database:\n" + sqle);
                }
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        setOpacity (1.0f);
    }//GEN-LAST:event_formWindowGainedFocus

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
        // TODO add your handling code here:
        setOpacity (0.7f);
    }//GEN-LAST:event_formWindowLostFocus

    private void lblBackgroundMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackgroundMousePressed
        // TODO add your handling code here:
        pointX = evt.getX();
        pointY = evt.getY();
    }//GEN-LAST:event_lblBackgroundMousePressed

    private void lblBackgroundMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackgroundMouseDragged
        // TODO add your handling code here:
        setLocation (getLocation().x + evt.getX() - pointX, getLocation().y + evt.getY() - pointY);
    }//GEN-LAST:event_lblBackgroundMouseDragged

    private void btnMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinActionPerformed
        // TODO add your handling code here:
        setState(Frame.ICONIFIED);
    }//GEN-LAST:event_btnMinActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        dispose();
        Inventory inv = new Inventory(connection, UID);
        inv.launchFrame();
    }//GEN-LAST:event_btnCloseActionPerformed
    
    public void userInit() {
        setLocationRelativeTo (null);
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice gd = ge.getDefaultScreenDevice();
        
        if (!gd.isWindowTranslucencySupported(TRANSLUCENT)) {
            System.err.println ("Translucensy not supported.");
        }
    }
    
    public void launchFrame() {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            setOpacity (1.0f);
            new CreateNew(connection, UID).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnMin;
    private javax.swing.JComboBox cboType;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblStock;
    private javax.swing.JLabel lblType;
    private javax.swing.JPanel pnlInfo;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfPrice;
    private javax.swing.JTextField tfStock;
    // End of variables declaration//GEN-END:variables
}
